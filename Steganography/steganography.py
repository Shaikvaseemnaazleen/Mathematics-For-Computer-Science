# -*- coding: utf-8 -*-
"""Steganography.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j-0iIn4usZaOsm-notKpyh92lzB-RyiK

# **STEGANOGRAPHY**
"""

#!/usr/bin/env python3

# Library to convert process images
from PIL import Image
import numpy as np

# Function to decode a color of pixel value
def bdecode(pixel):
    bin_decoded = bin(pixel)[-4:] + "0000"
    return int(bin_decoded, 2)

def hdecode(pixel):
    hex_decoded = hex(pixel)[len(hex(pixel)) - 1] + "0"
    return int(hex_decoded, 16)


# Function decodes all the three RGB values
def bdecode_pixel(pixel):
    return bdecode(pixel[0]), bdecode(pixel[1]), bdecode(pixel[2])

def hdecode_pixel(pixel):
    return hdecode(pixel[0]), hdecode(pixel[1]), hdecode(pixel[2])

# Main program
def main(fname, output):
    f = open(fname, "r")
    data = f.readlines()

    print(len(data))
    rows = int(data[0]) #int(input("Enter number of rows in image: "))
    cols = int(data[1]) #int(input("Enter number of columns in image: "))

    image = [[] for row in range(rows)]
    pixel = 0
    i = 2
    for row in range(rows):
        for col in range(cols):
            pixel = list(map(int, data[i].rstrip('\n').split()))
            #list(map(int, input("Enter {} row {} col pixel RGB values: ".format(row, col)).split()))

            pixel = bdecode_pixel(pixel)  # using binary converstion
            # Uncomment the below line to use hexadecimal conversion
            # pixel = hdecode_pixel(pixel)
             
            image[row].append(pixel)
            i += 1

    for row in range(rows):
        for col in range(cols):
            print(image[row][col], end=" ")
        print()

    image = np.array(image, dtype=np.uint8)

    image = Image.fromarray(image)
    image.save(output)


output = "decoded"
format = ".jpg"
fname = "img"

for i in range(11):
    print(i + 1)
    main(fname + str(i + 1) + ".txt", output + str(i + 1) + format)

# Commented out IPython magic to ensure Python compatibility.
# %pylab inline
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

for i in range(11):
    img=mpimg.imread(f'decoded{i + 1}.jpg')
    imgplot = plt.imshow(img)
    plt.show()

